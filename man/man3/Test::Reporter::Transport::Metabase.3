.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Test::Reporter::Transport::Metabase 3"
.TH Test::Reporter::Transport::Metabase 3 "2010-08-19" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::Reporter::Transport::Metabase \- Metabase transport for Test::Reporter
.SH "VERSION"
.IX Header "VERSION"
version 1.999008
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    my $report = Test::Reporter\->new(
\&        transport => \*(AqMetabase\*(Aq,
\&        transport_args => [
\&          uri     => \*(Aqhttp://metabase.example.com:3000/\*(Aq,
\&          id_file => \*(Aq/home/jdoe/.metabase/metabase_id.json\*(Aq,
\&        ],
\&    );
\&
\&    # use space\-separated in a CPAN::Reporter config.ini
\&    transport = Metabase uri http://metabase.example.com:3000/ ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module submits a Test::Reporter report to the specified Metabase instance.
.PP
This requires a network connection to the Metabase uri provided.  If you wish
to save reports during offline operation, see
Test::Reporter::Transport::File. (Eventually, you may be able to run a local
Metabase instance to queue reports for later transmission, but this feature has
not yet been developed.)
.SH "USAGE"
.IX Header "USAGE"
See Test::Reporter and Test::Reporter::Transport for general usage
information.
.SS "Transport arguments"
.IX Subsection "Transport arguments"
Unlike most other Transport classes, this class requires transport arguments
to be provided as key-value pairs:
.PP
.Vb 7
\&    my $report = Test::Reporter\->new(
\&        transport => \*(AqMetabase\*(Aq,
\&        transport_args => [
\&          uri     => \*(Aqhttp://metabase.example.com:3000/\*(Aq,
\&          id_file => \*(Aq/home/jdoe/.metabase/metabase_id.json\*(Aq,
\&        ],
\&    );
.Ve
.PP
Arguments include:
.ie n .IP """uri"" (required)" 4
.el .IP "\f(CWuri\fR (required)" 4
.IX Item "uri (required)"
The \f(CW\*(C`uri\*(C'\fR argument gives the network location of a Metabase instance to receive
reports.
.ie n .IP """id_file"" (required)" 4
.el .IP "\f(CWid_file\fR (required)" 4
.IX Item "id_file (required)"
The \f(CW\*(C`id_file\*(C'\fR argument must be a path to a Metabase \s-1ID\s0 file.  If
you do not already have an \s-1ID\s0 file, use the metabase-profile program to
create one.
.Sp
.Vb 1
\&  $ metabase\-profile
.Ve
.Sp
This creates the file \fImetabase_id.json\fR in the current directory.  You
can also give an \f(CW\*(C`\-\-output\*(C'\fR argument to save the file to a different
location or with a different name.
.ie n .IP """client"" (optional)" 4
.el .IP "\f(CWclient\fR (optional)" 4
.IX Item "client (optional)"
The \f(CW\*(C`client\*(C'\fR argument is optional and specifies the type of Metabase::Client
to use to transmit reports to the target Metabase.  It defaults to
Metabase::Client::Simple.
.SH "METHODS"
.IX Header "METHODS"
These methods are only for internal use by Test::Reporter.
.SS "new"
.IX Subsection "new"
.Vb 1
\&    my $sender = Test::Reporter::Transport::File\->new( $params );
.Ve
.PP
The \f(CW\*(C`new\*(C'\fR method is the object constructor.
.SS "send"
.IX Subsection "send"
.Vb 1
\&    $sender\->send( $report );
.Ve
.PP
The \f(CW\*(C`send\*(C'\fR method transmits the report.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
David Golden <dagolden@cpan.org>
.IP "\(bu" 4
Richard Dawe <richdawe@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2010 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
