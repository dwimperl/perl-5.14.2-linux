.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5135DELTA 1"
.TH PERL5135DELTA 1 "2011-09-26" "perl v5.14.2" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5135delta \- what is new for perl v5.13.5
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.13.4 release and
the 5.13.5 release.
.PP
If you are upgrading from an earlier release such as 5.13.3, first read
perl5134delta, which describes differences between 5.13.3 and
5.13.4.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.SS "Adjacent pairs of nextstate opcodes are now optimized away"
.IX Subsection "Adjacent pairs of nextstate opcodes are now optimized away"
Previously, in code such as
.PP
.Vb 1
\&    use constant DEBUG => 0;
\&
\&    sub GAK {
\&        warn if DEBUG;
\&        print "stuff\en";
\&    }
.Ve
.PP
the ops for \f(CW\*(C`warn if DEBUG;\*(C'\fR would be folded to a \f(CW\*(C`null\*(C'\fR op (\f(CW\*(C`ex\-const\*(C'\fR), but
the \f(CW\*(C`nextstate\*(C'\fR op would remain, resulting in a runtime op dispatch of
\&\f(CW\*(C`nextstate\*(C'\fR, \f(CW\*(C`nextstate\*(C'\fR, ...
.PP
The execution of a sequence of \f(CW\*(C`nextstate\*(C'\fR ops is indistinguishable from just
the last \f(CW\*(C`nextstate\*(C'\fR op so the peephole optimizer now eliminates the first of
a pair of \f(CW\*(C`nextstate\*(C'\fR ops, except where the first carries a label, since labels
must not be eliminated by the optimizer and label usage isn't conclusively known
at compile time.
.SS "\s-1API\s0 function to parse statements"
.IX Subsection "API function to parse statements"
The \f(CW\*(C`parse_fullstmt\*(C'\fR function has been added to allow parsing of a single
complete Perl statement.  See perlapi for details.
.SS "\s-1API\s0 functions for accessing the runtime hinthash"
.IX Subsection "API functions for accessing the runtime hinthash"
A new C \s-1API\s0 for introspecting the hinthash \f(CW\*(C`%^H\*(C'\fR at runtime has been added.
See \f(CW\*(C`cop_hints_2hv\*(C'\fR, \f(CW\*(C`cop_hints_fetchpvn\*(C'\fR, \f(CW\*(C`cop_hints_fetchpvs\*(C'\fR,
\&\f(CW\*(C`cop_hints_fetchsv\*(C'\fR, and \f(CW\*(C`hv_copy_hints_hv\*(C'\fR in perlapi for details.
.ie n .SS "C interface to ""caller()"""
.el .SS "C interface to \f(CWcaller()\fP"
.IX Subsection "C interface to caller()"
The \f(CW\*(C`caller_cx\*(C'\fR function has been added as an XSUB-writer's equivalent of
\&\f(CW\*(C`caller()\*(C'\fR.  See perlapi for details.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.SS "Magic variables outside the main package"
.IX Subsection "Magic variables outside the main package"
In previous versions of Perl, magic variables like \f(CW$!\fR, \f(CW%SIG\fR, etc. would
\&'leak' into other packages.  So \f(CW%foo::SIG\fR could be used to access signals,
\&\f(CW\*(C`${"foo::!"}\*(C'\fR (with strict mode off) to access C's \f(CW\*(C`errno\*(C'\fR, etc.
.PP
This was a bug, or an 'unintentional' feature, which caused various ill effects,
such as signal handlers being wiped when modules were loaded, etc.
.PP
This has been fixed (or the feature has been removed, depending on how you see
it).
.SS "Smart-matching against array slices"
.IX Subsection "Smart-matching against array slices"
Previously, the following code resulted in a successful match:
.PP
.Vb 3
\&    my @a = qw(a y0 z);
\&    my @b = qw(a x0 z);
\&    @a[0 .. $#b] ~~ @b;
.Ve
.PP
This odd behaviour has now been fixed
[perl #77468] <http://rt.perl.org/rt3//Public/Bug/Display.html?id=77468>.
.SS "C \s-1API\s0 changes"
.IX Subsection "C API changes"
The first argument of the C \s-1API\s0 function \f(CW\*(C`Perl_fetch_cop_label\*(C'\fR has changed
from \f(CW\*(C`struct refcounted he *\*(C'\fR to \f(CW\*(C`COP *\*(C'\fR, to better insulate the user from
implementation details.
.PP
This \s-1API\s0 function was marked as \*(L"may change\*(R", and likely isn't in use outside
the core.  (Neither an unpacked \s-1CPAN\s0, nor Google's codesearch, finds any other
references to it.)
.SH "Deprecations"
.IX Header "Deprecations"
.SS "Use of qw(...) as parentheses"
.IX Subsection "Use of qw(...) as parentheses"
Historically the parser fooled itself into thinking that \f(CW\*(C`qw(...)\*(C'\fR literals
were always enclosed in parentheses, and as a result you could sometimes omit
parentheses around them:
.PP
.Vb 1
\&    for $x qw(a b c) { ... }
.Ve
.PP
The parser no longer lies to itself in this way.  Wrap the list literal in
parentheses, like:
.PP
.Vb 1
\&    for $x (qw(a b c)) { ... }
.Ve
.SH "Performance Enhancements"
.IX Header "Performance Enhancements"
.IP "\(bu" 4
Scalars containing regular expressions now only allocate the part of the \f(CW\*(C`SV\*(C'\fR
body they actually use, saving some space.
.IP "\(bu" 4
Compiling regular expressions has been made faster for the case where upgrading
the regex to utf8 is necessary but that isn't known when the compilation begins.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.ie n .IP """bignum""" 4
.el .IP "\f(CWbignum\fR" 4
.IX Item "bignum"
Upgraded from version 0.23 to 0.25.
.ie n .IP """blib""" 4
.el .IP "\f(CWblib\fR" 4
.IX Item "blib"
Upgraded from version 1.05 to 1.06.
.ie n .IP """open""" 4
.el .IP "\f(CWopen\fR" 4
.IX Item "open"
Upgraded from version 1.07 to 1.08.
.ie n .IP """threads\-shared""" 4
.el .IP "\f(CWthreads\-shared\fR" 4
.IX Item "threads-shared"
Upgraded from version 1.33_02 to 1.33_03.
.ie n .IP """warnings"" and ""warnings::register""" 4
.el .IP "\f(CWwarnings\fR and \f(CWwarnings::register\fR" 4
.IX Item "warnings and warnings::register"
Upgraded from version 1.10 to 1.11 and from version 1.01 to 1.02 respectively.
.Sp
It is now possible to register warning categories other than the names of
packages using \f(CW\*(C`warnings::register\*(C'\fR.  See perllexwarn for more information.
.ie n .IP """B::Debug""" 4
.el .IP "\f(CWB::Debug\fR" 4
.IX Item "B::Debug"
Upgraded from version 1.12 to 1.16.
.ie n .IP """CPANPLUS::Dist::Build""" 4
.el .IP "\f(CWCPANPLUS::Dist::Build\fR" 4
.IX Item "CPANPLUS::Dist::Build"
Upgraded from version 0.46 to 0.48.
.ie n .IP """Data::Dumper""" 4
.el .IP "\f(CWData::Dumper\fR" 4
.IX Item "Data::Dumper"
Upgraded from version 2.126 to 2.128.
.Sp
This fixes a crash when using custom sort functions that might cause the stack
to change.
.ie n .IP """Encode""" 4
.el .IP "\f(CWEncode\fR" 4
.IX Item "Encode"
Upgraded from version 2.39 to 2.40.
.ie n .IP """Errno""" 4
.el .IP "\f(CWErrno\fR" 4
.IX Item "Errno"
Upgraded from version 1.12 to 1.13.
.Sp
On some platforms with unusual header files, like Win32/gcc using mingw64
headers, some constants which weren't actually error numbers have been exposed
by \f(CW\*(C`Errno\*(C'\fR.  This has been fixed
[perl #77416] <http://rt.perl.org/rt3//Public/Bug/Display.html?id=77416>.
.ie n .IP """ExtUtils::MakeMaker""" 4
.el .IP "\f(CWExtUtils::MakeMaker\fR" 4
.IX Item "ExtUtils::MakeMaker"
Upgraded from version 6.5601 to 6.57_05.
.ie n .IP """Filter::Simple""" 4
.el .IP "\f(CWFilter::Simple\fR" 4
.IX Item "Filter::Simple"
Upgraded from version 0.84 to 0.85.
.ie n .IP """Hash::Util""" 4
.el .IP "\f(CWHash::Util\fR" 4
.IX Item "Hash::Util"
Upgraded from version 0.08 to 0.09.
.ie n .IP """Math::BigInt""" 4
.el .IP "\f(CWMath::BigInt\fR" 4
.IX Item "Math::BigInt"
Upgraded from version 1.89_01 to 1.95.
.Sp
This fixes, among other things, incorrect results when computing binomial
coefficients
[perl #77640] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77640>.
.ie n .IP """Math::BigInt::FastCalc""" 4
.el .IP "\f(CWMath::BigInt::FastCalc\fR" 4
.IX Item "Math::BigInt::FastCalc"
Upgraded from version 0.19 to 0.22.
.ie n .IP """Math::BigRat""" 4
.el .IP "\f(CWMath::BigRat\fR" 4
.IX Item "Math::BigRat"
Upgraded from version 0.24 to 0.26.
.ie n .IP """Module::CoreList""" 4
.el .IP "\f(CWModule::CoreList\fR" 4
.IX Item "Module::CoreList"
Upgraded from version 2.37 to 2.38.
.ie n .IP """PerlIO::scalar""" 4
.el .IP "\f(CWPerlIO::scalar\fR" 4
.IX Item "PerlIO::scalar"
Upgraded from version 0.08 to 0.09.
.ie n .IP """POSIX""" 4
.el .IP "\f(CWPOSIX\fR" 4
.IX Item "POSIX"
Upgraded from version 1.19 to 1.20.
.Sp
It now includes constants for \s-1POSIX\s0 signal constants.
.ie n .IP """Safe""" 4
.el .IP "\f(CWSafe\fR" 4
.IX Item "Safe"
Upgraded from version 2.27 to 2.28.
.Sp
This fixes a possible infinite loop when looking for coderefs.
.ie n .IP """Test::Simple""" 4
.el .IP "\f(CWTest::Simple\fR" 4
.IX Item "Test::Simple"
Upgraded from version 0.96 to 0.97_01.
.ie n .IP """Tie::Hash""" 4
.el .IP "\f(CWTie::Hash\fR" 4
.IX Item "Tie::Hash"
Upgraded from version 1.03 to 1.04.
.Sp
Calling \f(CW\*(C`Tie::Hash\->TIEHASH()\*(C'\fR used to loop forever.  Now it \f(CW\*(C`croak\*(C'\fRs.
.ie n .IP """Unicode::Collate""" 4
.el .IP "\f(CWUnicode::Collate\fR" 4
.IX Item "Unicode::Collate"
Upgraded from version 0.56 to 0.59.
.ie n .IP """XSLoader""" 4
.el .IP "\f(CWXSLoader\fR" 4
.IX Item "XSLoader"
Upgraded from version 0.10 to 0.11.
.SH "Documentation"
.IX Header "Documentation"
.SS "Changes to Existing Documentation"
.IX Subsection "Changes to Existing Documentation"
\fIperlapi\fR
.IX Subsection "perlapi"
.IP "\(bu" 4
Many of the optree construction functions are now documented.
.PP
\fIperlbook\fR
.IX Subsection "perlbook"
.IP "\(bu" 4
Expanded to cover many more popular books.
.PP
\fIperlfaq\fR
.IX Subsection "perlfaq"
.IP "\(bu" 4
perlfaq, perlfaq2, perlfaq4, perlfaq5, perlfaq6, perlfaq8, and
perlfaq9 have seen various updates and modernizations.
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "New Diagnostics"
.IX Subsection "New Diagnostics"
.IP "\(bu" 4
Parsing code internal error (%s)
.Sp
New fatal error produced when parsing code supplied by an extension violated the
parser's \s-1API\s0 in a detectable way.
.IP "\(bu" 4
Use of qw(...) as parentheses is deprecated
.Sp
See \*(L"Use of qw(...) as parentheses\*(R" for details.
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
\&\f(CW\*(C`warn\*(C'\fR and \f(CW\*(C`die\*(C'\fR now produce 'Wide character' warnings when fed a
character outside the byte range if \s-1STDERR\s0 is a byte-sized handle.
.SH "Utility Changes"
.IX Header "Utility Changes"
\fIh2ph\fR
.IX Subsection "h2ph"
.IP "\(bu" 4
The use of a deprecated \f(CW\*(C`goto\*(C'\fR construct has been removed
[perl #74404] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=74404>.
.SH "Testing"
.IX Header "Testing"
.IP "\(bu" 4
The new \fIt/lib/universal.t\fR script tests the Internal::* functions and other
things in \fIuniversal.c\fR.
.IP "\(bu" 4
A rare race condition in \fIt/op/while_readdir.t\fR has been fixed, stopping it
from failing randomly when running tests in parallel.
.IP "\(bu" 4
The new \fIt/op/leaky\-magic.t\fR script tests that magic applied to variables in
the main packages does not affect other packages.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "\s-1VMS\s0" 4
.IX Item "VMS"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Make \f(CW\*(C`PerlIOUnix_open\*(C'\fR honour default permissions on \s-1VMS\s0.
.Sp
When \f(CW\*(C`perlio\*(C'\fR became the default and \f(CW\*(C`unixio\*(C'\fR became the default bottom layer,
the most common path for creating files from Perl became \f(CW\*(C`PerlIOUnix_open\*(C'\fR,
which has always explicitly used \f(CW0666\fR as the permission mask.
.Sp
To avoid this, \f(CW0777\fR is now passed as the permissions to \f(CW\*(C`open()\*(C'\fR.  In the
\&\s-1VMS\s0 \s-1CRTL\s0, \f(CW0777\fR has a special meaning over and above intersecting with the
current umask; specifically, it allows Unix syscalls to preserve native default
permissions.
.RE
.RS 4
.RE
.SH "Internal Changes"
.IX Header "Internal Changes"
.IP "\(bu" 4
\&\f(CW\*(C`CALL_FPTR\*(C'\fR and \f(CW\*(C`CPERLscope\*(C'\fR have been deprecated.
.Sp
Those are left from an old implementation of \f(CW\*(C`MULTIPLICITY\*(C'\fR using \*(C+ objects,
which was removed in Perl 5.8.  Nowadays these macros do exactly nothing, so
they shouldn't be used anymore.
.Sp
For compatibility, they are still defined for external \f(CW\*(C`XS\*(C'\fR code.  Only
extensions defining \f(CW\*(C`PERL_CORE\*(C'\fR must be updated now.
.IP "\(bu" 4
\&\f(CW\*(C`lex_stuff_pvs()\*(C'\fR has been added as a convenience macro wrapping
\&\f(CW\*(C`lex_stuff_pvn()\*(C'\fR for literal strings.
.IP "\(bu" 4
The recursive part of the peephole optimizer is now hookable.
.Sp
In addition to \f(CW\*(C`PL_peepp\*(C'\fR, for hooking into the toplevel peephole optimizer, a
\&\f(CW\*(C`PL_rpeepp\*(C'\fR is now available to hook into the optimizer recursing into
side-chains of the optree.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
A regression introduced in Perl 5.12.0, making
\&\f(CW\*(C`my $x = 3; $x = length(undef)\*(C'\fR result in \f(CW$x\fR set to \f(CW3\fR has been
fixed.  \f(CW$x\fR will now be \f(CW\*(C`undef\*(C'\fR.
.IP "\(bu" 4
A fatal error in regular expressions when processing \s-1UTF\-8\s0 data has been fixed
[perl #75680] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=75680>.
.IP "\(bu" 4
An erroneous regular expression engine optimization that caused regex verbs like
\&\f(CW*COMMIT\fR to sometimes be ignored has been removed.
.IP "\(bu" 4
The Perl debugger now also works in taint mode
[perl #76872] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=76872>.
.IP "\(bu" 4
Several memory leaks in cloning and freeing threaded Perl interpreters have been
fixed [perl #77352] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77352>.
.IP "\(bu" 4
A possible string corruption when doing regular expression matches on overloaded
objects has been fixed
[perl #77084] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77084>.
.IP "\(bu" 4
Magic applied to variables in the main package no longer affects other packages.
See \*(L"Magic variables outside the main package\*(R" above
[perl #76138] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=76138>.
.IP "\(bu" 4
Opening a glob reference via \f(CW\*(C`open $fh, ">", \e*glob\*(C'\fR will no longer
cause the glob to be corrupted when the filehandle is printed to.  This would
cause perl to crash whenever the glob's contents were accessed
[perl #77492] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77492>.
.IP "\(bu" 4
The postincrement and postdecrement operators, \f(CW\*(C`++\*(C'\fR and \f(CW\*(C`\-\-\*(C'\fR, used to cause
leaks when being used on references.  This has now been fixed.
.IP "\(bu" 4
A bug when replacing the glob of a loop variable within the loop has been fixed
[perl #21469] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=21469>.  This
means the following code will no longer crash:
.Sp
.Vb 3
\&    for $x (...) {
\&        *x = *y;
\&    }
.Ve
.IP "\(bu" 4
Perl would segfault if the undocumented \f(CW\*(C`Internals\*(C'\fR functions that used
reference prototypes were called with the \f(CW\*(C`&foo()\*(C'\fR syntax, e.g.
\&\f(CW\*(C`&Internals::SvREADONLY(undef)\*(C'\fR
[perl #77776] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77776>.
.Sp
These functions now call \f(CW\*(C`SvROK\*(C'\fR on their arguments before dereferencing them
with \f(CW\*(C`SvRV\*(C'\fR, and we test for this case in \fIt/lib/universal.t\fR.
.IP "\(bu" 4
When assigning a list with duplicated keys to a hash, the assignment used to
return garbage and/or freed values:
.Sp
.Vb 1
\&    @a = %h = (list with some duplicate keys);
.Ve
.Sp
This has now been fixed
[perl #31865] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=31865>.
.IP "\(bu" 4
An earlier release of the 5.13 series of Perl changed the semantics of opening a
reference to a copy of a glob:
.Sp
.Vb 2
\&    my $var = *STDOUT;
\&    open my $fh, \*(Aq>\*(Aq, \e$var;
.Ve
.Sp
This was a mistake, and the previous behaviour from Perl 5.10 and 5.12, which is
to treat \e$var as a scalar reference, has now been restored.
.IP "\(bu" 4
The regular expression bracketed character class \f(CW\*(C`[\e8\e9]\*(C'\fR was effectively the
same as \f(CW\*(C`[89\e000]\*(C'\fR, incorrectly matching a \s-1NULL\s0 character.  It also gave
incorrect warnings that the \f(CW8\fR and \f(CW9\fR were ignored.  Now \f(CW\*(C`[\e8\e9]\*(C'\fR is the
same as \f(CW\*(C`[89]\*(C'\fR and gives legitimate warnings that \f(CW\*(C`\e8\*(C'\fR and \f(CW\*(C`\e9\*(C'\fR are
unrecognized escape sequences, passed-through.
.IP "\(bu" 4
\&\f(CW\*(C`warn()\*(C'\fR and \f(CW\*(C`die()\*(C'\fR now respect utf8\-encoded scalars
[perl #45549] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=45549>.
.SH "Known Problems"
.IX Header "Known Problems"
.IP "\(bu" 4
The upgrade to Encode\-2.40 has caused some tests in the libwww-perl distribution
on \s-1CPAN\s0 to fail. (Specifically, \fIbase/message\-charset.t\fR tests 33\-36 in version
5.836 of that distribution now fail.)
.IP "\(bu" 4
The upgrade to ExtUtils\-MakeMaker\-6.57_05 has caused some tests in the
Module-Install distribution on \s-1CPAN\s0 to fail. (Specifically, \fI02_mymeta.t\fR tests
5 and 21, \fI18_all_from.t\fR tests 6 and 15, \fI19_authors.t\fR tests 5, 13, 21 and
29, and \fI20_authors_with_special_characters.t\fR tests 6, 15 and 23 in version
1.00 of that distribution now fail.)
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.13.5 represents approximately one month of development since
Perl 5.13.4 and contains 74558 lines of changes across 549 files
from 45 authors and committers:
.PP
Abigail, Alexander Alekseev, Aristotle Pagaltzis, Ben Morrow, Bram, brian d foy,
Chas. Owens, Chris 'BinGOs' Williams, Craig A. Berry, Curtis Jewell, Dagfinn
Ilmari Mannsa\*oker, David Golden, David Leadbeater, David Mitchell, Eric Brine,
Father Chrysostomos, Florian Ragwitz, Gisle Aas, Jan Dubois, Jerry D. Hedden,
Jesse Vincent, Jim Cromie, Jirka HruXka, Karl Williamson, Michael G. Schwern,
Nicholas Clark, Paul Johnson, Philippe Bruhat (BooK), Piotr Fusik, Rafael
Garcia-Suarez, Rainer Tammer, Reini Urban, Ricardo Signes, Rob Hoelz, Robin
Barker, Steffen Mueller, Steve Hay, Steve Peters, Todd Rinaldo, Tony Cook,
Vincent Pit, Yves Orton, Zefram, Zsba\*'n Ambrus, \*(AEvar Arnfjo\*:r\*(d- Bjarmason.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0
modules included in Perl's core. We're grateful to the entire \s-1CPAN\s0
community for helping Perl to flourish.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the \fBperlbug\fR
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of \f(CW\*(C`perl \-V\*(C'\fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5\-security\-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently
distributed on \s-1CPAN\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details
on what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
