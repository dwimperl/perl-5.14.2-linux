.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPAN::Reporter::FAQ 3"
.TH CPAN::Reporter::FAQ 3 "2011-08-11" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPAN::Reporter::FAQ \- Answers and tips for using CPAN::Reporter
.SH "VERSION"
.IX Header "VERSION"
version 1.2002
.SH "REPORT GRADES"
.IX Header "REPORT GRADES"
.SS "Why did I receive a report?"
.IX Subsection "Why did I receive a report?"
Historically, \s-1CPAN\s0 Testers was designed to have each tester send a copy of
reports to authors.  This philosophy changed in September 2008 and \s-1CPAN\s0 Testers
tools were updated to no longer copy authors, but some testers may still be
using an older version.
.SS "Why was a report sent if a prerequisite is missing?"
.IX Subsection "Why was a report sent if a prerequisite is missing?"
As of CPAN::Reporter 0.46, \s-1FAIL\s0 and \s-1UNKNOWN\s0 reports with unsatisfied 
prerequisites are discarded.  Earlier versions may have sent these reports 
out by mistake as either an \s-1NA\s0 or \s-1UNKNOWN\s0 report.
.PP
\&\s-1PASS\s0 reports are not discarded because it may be useful to know when tests
passed despite a missing prerequisite.  \s-1NA\s0 reports are sent because information
about the lack of support for a platform is relevant regardless of
prerequisites.
.SH "SENDING REPORTS"
.IX Header "SENDING REPORTS"
.SS "Why did I get an error sending a test report?"
.IX Subsection "Why did I get an error sending a test report?"
Historically, test reports were sent via ordinary email.
The most common reason for errors sending a report back then was that
many Internet Service Providers (\s-1ISP\s0's) would block
outbound \s-1SMTP\s0 (email) connections as part of their efforts to fight spam.
.PP
Since 2010, test reports are sent to the \s-1CPAN\s0 Testers Metabase over \s-1HTTPS\s0. The
most common reason for failures are systems which upgraded CPAN::Reporter but
are still configured to use the deprecated and unsupported email system instead
of Metabase for transport.
.PP
If you are unsure which transport mechanism you're using, look for the
\&\f(CW\*(C`transport\*(C'\fR rule in the \f(CW\*(C`.cpanreporter/config.ini\*(C'\fR file, in the
user's home directory.  See CPAN::Reporter::Config for details on how
to set the \f(CW\*(C`transport\*(C'\fR option for Metabase.
.PP
Other errors could be caused by the absence of the
\&\f(CW\*(C`.cpanreporter/metabase_id.json\*(C'\fR file in the user's home directory. This file
should be manually created prior to sending any reports, via the
\&\f(CW\*(C`metabase\-profile\*(C'\fR program. Simply run it and fill the informations
accordingly, and it will create the \f(CW\*(C`metabase_id.json\*(C'\fR file for you. Move that
file to your \f(CW\*(C`.cpanreporter\*(C'\fR directory and you're all set.
.PP
Finally, lack of Internet connection or firewall filtering will prevent
the report from reaching the \s-1CPAN\s0 Testers servers. If you are experiencing
\&\s-1HTTPS\s0 issues or messages complaining about \s-1SSL\s0 modules, try installing
the LWP::Protocol::https module and trying again. If all fails, you
may still change the transport uri to use \s-1HTTP\s0 instead of \s-1HTTPS\s0, though
this is \fInot\fR recommended.
.SS "Why didn't my test report show up on \s-1CPAN\s0 Testers?"
.IX Subsection "Why didn't my test report show up on CPAN Testers?"
There is a delay between the time reports are sent to the Metabase and when
they they appear on the \s-1CPAN\s0 Testers website. There is a further delay before
summary statistics appear on search.cpan.org.  If your reports do not appear
after 24 hours, please contact the cpan-testers-discuss email list
(http://lists.perl.org/list/cpan\-testers\-discuss.html <http://lists.perl.org/list/cpan-testers-discuss.html>) or join the
\&\f(CW\*(C`#cpantesters\-discuss\*(C'\fR \s-1IRC\s0 channel on \f(CW\*(C`irc.perl.org\*(C'\fR.
.SH "CPAN TESTERS"
.IX Header "CPAN TESTERS"
.SS "Where can I find out more about \s-1CPAN\s0 Testers?"
.IX Subsection "Where can I find out more about CPAN Testers?"
A good place to start is the \s-1CPAN\s0 Testers Wiki: 
<http://wiki.cpantesters.org/>
.SS "Where can I find statistics about reports sent to \s-1CPAN\s0 Testers?"
.IX Subsection "Where can I find statistics about reports sent to CPAN Testers?"
\&\s-1CPAN\s0 Testers statistics are compiled at <http://stats.cpantesters.org/>
.SS "How do I make sure I get credit for my test reports?"
.IX Subsection "How do I make sure I get credit for my test reports?"
To get credit in the statistics, use the same Metabase profile file
and the same email address wherever you run tests.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
CPAN::Testers
.IP "\(bu" 4
CPAN::Reporter
.IP "\(bu" 4
Test::Reporter
.SH "AUTHOR"
.IX Header "AUTHOR"
David Golden <dagolden@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2006 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
