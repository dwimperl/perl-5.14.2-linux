.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPAN::Reporter::Config 3"
.TH CPAN::Reporter::Config 3 "2011-08-11" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPAN::Reporter::Config \- Config file options for CPAN::Reporter
.SH "VERSION"
.IX Header "VERSION"
version 1.2002
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
From the \s-1CPAN\s0 shell:
.PP
.Vb 1
\&  cpan> o conf init test_report
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Default options for CPAN::Reporter are read from a configuration file
\&\f(CW\*(C`.cpanreporter/config.ini\*(C'\fR in the user's home directory.  (On Win32 platforms,
the directory will be located in the user's \*(L"Documents\*(R" directory.)
The location of the configuration directory or file may be specified
using environment variables instead.
.PP
The configuration file is in \*(L"ini\*(R" format, with the option name and value
separated by an \*(L"=\*(R" sign
.PP
.Vb 2
\&   email_from = "John Doe" <johndoe@nowhere.org>
\&   edit_report = no
.Ve
.PP
Interactive configuration of email address and common
action prompts may be repeated at any time from the \s-1CPAN\s0 shell.
.PP
.Vb 1
\&  cpan> o conf init test_report
.Ve
.PP
If a configuration file does not exist, it will be created the first
time interactive configuration is performed.
.PP
Subsequent interactive configuration will also include any advanced
options that have been added manually to the configuration file.
.SH "INTERACTIVE CONFIGURATION OPTIONS"
.IX Header "INTERACTIVE CONFIGURATION OPTIONS"
.SS "Email Address (required)"
.IX Subsection "Email Address (required)"
.Vb 1
\&   email_from = <email address>
.Ve
.PP
CPAN::Reporter requires users to provide an email address that will be used
in the header of the report.
.PP
The email address provided should be a valid address format, e.g.:
.PP
.Vb 3
\&  email_from = user@domain
\&  email_from = John Doe <user@domain>
\&  email_from = "John Q. Public" <user@domain>
.Ve
.SS "Transport (required)"
.IX Subsection "Transport (required)"
.Vb 1
\&   transport = <transport class> [transport args]
.Ve
.PP
This sets the transport mechanism passed to the \f(CW\*(C`transport()\*(C'\fR method of
Test::Reporter. Normally, CPAN::Reporter uses 'Metabase' for transport class
(i.e. Test::Reporter::Transport::Metabase) and will provide a default set of
transport arguments.
.PP
Metabase transport arguments are two space-separated key/value pairs:
.IP "\(bu" 4
\&\f(CW\*(C`uri\*(C'\fR \*(-- \s-1URI\s0 for the Metabase \s-1API\s0. Defaults to
\&\f(CW\*(C`https://metabase.cpantesters.org/api/v1/\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`id_file\*(C'\fR \*(-- path to the user's Metabase profile file.
Defaults to \f(CW\*(C`metabase_id.json\*(C'\fR.  (Assumed to be in the \f(CW\*(C`.cpanreporter\*(C'\fR
directory).
.PP
Prior to sending reports, a user must have a valid profile file at the path
specified.  For Metabase transport, CPAN::Reporter will automatically rewrite a
relative \f(CW\*(C`id_file\*(C'\fR path as an absolute path located in the \f(CW\*(C`.cpanreporter\*(C'\fR
directory.
.PP
If the specified profile file does not exist, CPAN::Reporter will offer
to run \f(CW\*(C`metabase\-profile\*(C'\fR to create it.
.PP
For other transport types, see the documentation that comes with your choice of
Test::Reporter::Transport subclass for the proper way to set the \f(CW\*(C`transport\*(C'\fR
configuration option.
.SS "Action Prompts"
.IX Subsection "Action Prompts"
Several steps in the generation of a test report are optional.  Configuration
options control whether an action should be taken automatically or whether
CPAN::Reporter should prompt the user for the action to take.  The action to
take may be different for each report grade.  For example, users may wish to
customize for which grades they wish to manually review a report before sending
it.
.PP
Most users should just accept the default settings until they have some
experience as \s-1CPAN\s0 Testers.
.PP
Valid actions, and their associated meaning, are as follows:
.IP "\(bu" 4
\&\f(CW\*(C`yes\*(C'\fR \*(-- automatic yes
.IP "\(bu" 4
\&\f(CW\*(C`no\*(C'\fR \*(-- automatic no
.IP "\(bu" 4
\&\f(CW\*(C`ask/no\*(C'\fR or just \f(CW\*(C`ask\*(C'\fR \*(-- ask each time, but default to no
.IP "\(bu" 4
\&\f(CW\*(C`ask/yes\*(C'\fR \*(-- ask each time, but default to yes
.PP
For \*(L"ask\*(R" prompts, the default will be used if return is pressed immediately at
the prompt or if the \f(CW\*(C`PERL_MM_USE_DEFAULT\*(C'\fR environment variable is set to a
true value.
.PP
Action prompt options take one or more space-separated \*(L"grade:action\*(R" pairs,
which are processed left to right.
.PP
.Vb 1
\&  edit_report = fail:ask/yes pass:no
.Ve
.PP
An action by itself is taken as a default to be used for any grade which does
not have a grade-specific action.  A default action may also be set by using
the word \*(L"default\*(R" in place of a grade.
.PP
.Vb 2
\&  edit_report = ask/no
\&  edit_report = default:ask/no
.Ve
.PP
A grade by itself is taken to have the action \*(L"yes\*(R" for that grade.
.PP
.Vb 1
\&  edit_report = default:no fail
.Ve
.PP
Multiple grades may be specified together by separating them with a slash.
.PP
.Vb 1
\&  edit_report = pass:no fail/na/unknown:ask/yes
.Ve
.PP
The action prompt options included in interactive configuration are:
.IP "\(bu" 4
\&\f(CW\*(C`edit_report = <grade:action> ...\*(C'\fR \*(-- edit the test report before sending?
(default:ask/no pass/na:no)
.IP "\(bu" 4
\&\f(CW\*(C`send_report = <grade:action> ...\*(C'\fR \*(-- should test reports be sent at all?
(default:ask/yes pass/na:yes)
.PP
Note that if \f(CW\*(C`send_report\*(C'\fR is set to \*(L"no\*(R", CPAN::Reporter will still go through
the motions of preparing a report, but will discard it rather than send it.
.PP
A better way to disable CPAN::Reporter temporarily is with the \s-1CPAN\s0 option
\&\f(CW\*(C`test_report\*(C'\fR:
.PP
.Vb 1
\&  cpan> o conf test_report 0
.Ve
.SS "Mail Server (\s-1DEPRECATED\s0)"
.IX Subsection "Mail Server (DEPRECATED)"
CPAN::Reporter used to send mail directly to perl.org mail servers. The
\&\f(CW\*(C`smtp_server\*(C'\fR option is now deprecated and will be ignored if it exists.
.SH "ADVANCED CONFIGURATION OPTIONS"
.IX Header "ADVANCED CONFIGURATION OPTIONS"
These additional options are only necessary in special cases, for example if
the default editor cannot be found or if reports shouldn't be sent in
certain situations or for automated testing, and so on.
.IP "\(bu" 4
\&\f(CW\*(C`command_timeout\*(C'\fR \*(-- if greater than zero and the \s-1CPAN\s0 config is
\&\f(CW\*(C`inactivity_timeout\*(C'\fR is not set, then any commands executed by CPAN::Reporter
will be halted after this many seconds; useful for unattended smoke testing
to stop after some amount of time; generally, this should be large \*(--
900 seconds or more \*(-- as some distributions' tests take quite a long time to
run.  On MSWin32, Win32::Job is a needed and trying to kill a processes may
actually deadlock in some situations \*(-- so use at your own risk.
.IP "\(bu" 4
\&\f(CW\*(C`editor = <editor>\*(C'\fR \*(-- editor to use to edit the test report; if not set,
Test::Reporter will use environment variables \f(CW\*(C`VISUAL\*(C'\fR, \f(CW\*(C`EDITOR\*(C'\fR or \f(CW\*(C`EDIT\*(C'\fR
(in that order) to find an editor
.IP "\(bu" 4
\&\f(CW\*(C`send_duplicates = <grade:action> ...\*(C'\fR \*(-- should duplicates of previous
reports be sent, regardless of \f(CW\*(C`send_report\*(C'\fR? (default:no)
.IP "\(bu" 4
\&\f(CW\*(C`send_PL_report = <grade:action> ...\*(C'\fR \*(-- if defined, used in place of
\&\f(CW\*(C`send_report\*(C'\fR during the \s-1PL\s0 phase
.IP "\(bu" 4
\&\f(CW\*(C`send_make_report = <grade:action> ...\*(C'\fR \*(-- if defined, used in place of
\&\f(CW\*(C`send_report\*(C'\fR during the make phase
.IP "\(bu" 4
\&\f(CW\*(C`send_test_report = <grade:action> ...\*(C'\fR \*(-- if defined, used in place of
\&\f(CW\*(C`send_report\*(C'\fR during the test phase
.IP "\(bu" 4
\&\f(CW\*(C`send_skipfile = <skipfile>\*(C'\fR \*(-- filename containing regular expressions (one
per line) to match against the distribution \s-1ID\s0 (e.g.
\&'AUTHOR/Dist\-Name\-0.01.tar.gz'); the report will not be sent if a match is
found; non-absolute filename must be in the .cpanreporter config directory;
.PP
If these options are manually added to the configuration file, they will
be included (and preserved) in subsequent interactive configuration.
.SS "Skipfile regular expressions"
.IX Subsection "Skipfile regular expressions"
Skip files are expected to have one regular expression per line and will be
matched against the distribution \s-1ID\s0, composed of the author's \s-1CPAN\s0 \s-1ID\s0 and the
distribution tarball name.
.PP
.Vb 1
\&     DAGOLDEN/CPAN\-Reporter\-1.00.tar.gz
.Ve
.PP
Lines that begin with a sharp (#) are considered comments and will not be
matched.  All regular expressionss will be matched case insensitive and will
not be anchored unless you provide one.
.PP
As the format of a distribution \s-1ID\s0 is \*(L"AUTHOR/tarball\*(R", anchoring at the
start of the line with a caret (^) will match the author and with a slash (/)
will match the distribution.
.PP
.Vb 6
\&     # any distributions by JOHNDOE
\&     ^JOHNDOE
\&     # any distributions starting with Win32
\&     /Win32
\&     # a particular very specific distribution
\&     ^JOHNDOE/Foo\-Bar\-3.14
.Ve
.SH "CONFIGURATION OPTIONS FOR DEBUGGING"
.IX Header "CONFIGURATION OPTIONS FOR DEBUGGING"
These options are useful for debugging only:
.IP "\(bu" 4
\&\f(CW\*(C`debug = <boolean>\*(C'\fR \*(-- turns debugging on/off
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The following environment variables may be set to alter the default locations
for CPAN::Reporter files:
.IP "\(bu" 4
\&\f(CW\*(C`PERL_CPAN_REPORTER_DIR\*(C'\fR \*(-- if set, this directory is used in place of
the default \f(CW\*(C`.cpanreporter\*(C'\fR directory; this will affect not only the location
of the default \f(CW\*(C`config.ini\*(C'\fR, but also the location of the
CPAN::Reporter::History database and any other files that live in that
directory
.IP "\(bu" 4
\&\f(CW\*(C`PERL_CPAN_REPORTER_CONFIG\*(C'\fR \*(-- if set, this file is used in place of
the default \f(CW\*(C`config.ini\*(C'\fR file; it may be in any directory, regardless of the
choice of configuration directory
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
CPAN::Reporter
.IP "\(bu" 4
CPAN::Reporter::History
.IP "\(bu" 4
CPAN::Reporter::FAQ
.PP
# vim: ts=4 sts=4 sw=4 et:
.SH "AUTHOR"
.IX Header "AUTHOR"
David Golden <dagolden@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2006 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
