.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5138DELTA 1"
.TH PERL5138DELTA 1 "2011-09-26" "perl v5.14.2" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5138delta \- what is new for perl v5.13.8
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes differences between the 5.13.7 release and
the 5.13.8 release.
.PP
If you are upgrading from an earlier release such as 5.13.6, first read
perl5137delta, which describes differences between 5.13.6 and
5.13.7.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.ie n .SS """\-d:\-foo"" calls ""Devel::foo::unimport"""
.el .SS "\f(CW\-d:\-foo\fP calls \f(CWDevel::foo::unimport\fP"
.IX Subsection "-d:-foo calls Devel::foo::unimport"
The syntax \f(CW\*(C`\-d\f(CI\f(CB:\f(CIfoo\f(CW\*(C'\fR was extended in 5.6.1 to make \f(CW\*(C`\-d\f(CI:foo\f(CB=bar\f(CI\f(CW\*(C'\fR
equivalent to \f(CW\*(C`\-MDevel::foo=bar\*(C'\fR, which expands
internally to \f(CW\*(C`use Devel::foo \*(Aqbar\*(Aq;\*(C'\fR.
\&\fIperl\fR now allows prefixing the module name with \f(CW\*(C`\-\*(C'\fR, with the same
semantics as \f(CW\*(C`\-M\*(C'\fR, \fIi.e.\fR
.ie n .IP """\-d:\-foo""" 4
.el .IP "\f(CW\-d:\-foo\fR" 4
.IX Item "-d:-foo"
Equivalent to \f(CW\*(C`\-M\-Devel::foo\*(C'\fR, expands to
\&\f(CW\*(C`no Devel::foo;\*(C'\fR, calls \f(CW\*(C`Devel::foo\->unimport()\*(C'\fR
if the method exists.
.ie n .IP """\-d:\-foo=bar""" 4
.el .IP "\f(CW\-d:\-foo=bar\fR" 4
.IX Item "-d:-foo=bar"
Equivalent to \f(CW\*(C`\-M\-Devel::foo=bar\*(C'\fR, expands to \f(CW\*(C`no Devel::foo \*(Aqbar\*(Aq;\*(C'\fR,
calls \f(CW\*(C`Devel::foo\->unimport(\*(Aqbar\*(Aq)\*(C'\fR if the method exists.
.PP
This is particularly useful to suppresses the default actions of a
\&\f(CW\*(C`Devel::*\*(C'\fR module's \f(CW\*(C`import\*(C'\fR method whilst still loading it for debugging.
.SS "Filehandle method calls load IO::File on demand"
.IX Subsection "Filehandle method calls load IO::File on demand"
When a method call on a filehandle would die because the method cannot
be resolved, and IO::File has not been loaded, Perl now loads IO::File
via \f(CW\*(C`require\*(C'\fR and attempts method resolution again:
.PP
.Vb 2
\&  open my $fh, ">", $file;
\&  $fh\->binmode(":raw");     # loads IO::File and succeeds
.Ve
.PP
This also works for globs like \s-1STDOUT\s0, \s-1STDERR\s0 and \s-1STDIN:\s0
.PP
.Vb 1
\&  STDOUT\->autoflush(1);
.Ve
.PP
Because this on-demand load only happens if method resolution fails, the
legacy approach of manually loading an IO::File parent class for partial
method support still works as expected:
.PP
.Vb 3
\&  use IO::Handle;
\&  open my $fh, ">", $file;
\&  $fh\->autoflush(1);        # IO::File not loaded
.Ve
.ie n .SS "Full functionality for ""use feature \*(Aqunicode_strings\*(Aq"""
.el .SS "Full functionality for \f(CWuse feature \*(Aqunicode_strings\*(Aq\fP"
.IX Subsection "Full functionality for use feature unicode_strings"
This release provides full functionality for \f(CW\*(C`use feature
\&\*(Aqunicode_strings\*(Aq\*(C'\fR.  Under its scope, all string operations executed and
regular expressions compiled (even if executed outside its scope) have
Unicode semantics.  See feature.
.PP
This feature avoids most forms of the \*(L"Unicode Bug\*(R" (See
\&\*(L"The \*(R"Unicode Bug"" in perlunicode for details.)  If there is a
possibility that your code will process Unicode strings, you are
\&\fBstrongly\fR encouraged to use this subpragma to avoid nasty surprises.
.PP
The availability of this should strongly affect the whole tone of
various documents, such as perlunicode and perluniintro, but this
work has not been done yet.
.SS "Exception Handling Backcompat Hack"
.IX Subsection "Exception Handling Backcompat Hack"
When an exception is thrown in an \f(CW\*(C`eval BLOCK\*(C'\fR, \f(CW$@\fR is now set before
unwinding, as well as being set after unwinding as the eval block exits.  This
early setting supports code that has historically treated \f(CW$@\fR during unwinding
as an indicator of whether the unwinding was due to an exception.  These modules
had been broken by 5.13.1's change from setting \f(CW$@\fR early to setting it late.
This double setting arrangement is a stopgap until the reason for unwinding can
be made properly introspectable.  \f(CW$@\fR has never been a reliable indicator of
the reason for unwinding.
.SS "printf-like functions understand post\-1980 size modifiers"
.IX Subsection "printf-like functions understand post-1980 size modifiers"
Perl's printf and sprintf operators, and Perl's internal printf replacement
function, now understand the C90 size modifiers \*(L"hh\*(R" (\f(CW\*(C`char\*(C'\fR), \*(L"z\*(R"
(\f(CW\*(C`size_t\*(C'\fR), and \*(L"t\*(R" (\f(CW\*(C`ptrdiff_t\*(C'\fR).  Also, when compiled with a C99
compiler, Perl now understands the size modifier \*(L"j\*(R" (\f(CW\*(C`intmax_t\*(C'\fR).
.PP
So, for example, on any modern machine, \f(CW\*(C`sprintf(\*(Aq%hhd\*(Aq, 257)\*(C'\fR returns '1'.
.SS "DTrace probes now include package name"
.IX Subsection "DTrace probes now include package name"
The DTrace probes now include an additional argument (\f(CW\*(C`arg3\*(C'\fR) which contains
the package the subroutine being entered or left was compiled in.
.PP
For example using the following DTrace script:
.PP
.Vb 4
\&  perl$target:::sub\-entry
\&  {
\&      printf("%s::%s\en", copyinstr(arg0), copyinstr(arg3));
\&  }
.Ve
.PP
and then running:
.PP
.Vb 1
\&  perl \-e\*(Aqsub test { }; test\*(Aq
.Ve
.PP
DTrace will print:
.PP
.Vb 1
\&  main::test
.Ve
.SS "Stacked labels"
.IX Subsection "Stacked labels"
Multiple statement labels can now appear before a single statement.
.SH "Incompatible Changes"
.IX Header "Incompatible Changes"
.ie n .SS """:="" is now a syntax error"
.el .SS "\f(CW:=\fP is now a syntax error"
.IX Subsection ":= is now a syntax error"
Previously \f(CW\*(C`my $pi := 4;\*(C'\fR was exactly equivalent to \f(CW\*(C`my $pi : = 4;\*(C'\fR,
with the \f(CW\*(C`:\*(C'\fR being treated as the start of an attribute list, ending before
the \f(CW\*(C`=\*(C'\fR. The use of \f(CW\*(C`:=\*(C'\fR to mean \f(CW\*(C`: =\*(C'\fR was deprecated in 5.12.0, and is now
a syntax error. This will allow the future use of \f(CW\*(C`:=\*(C'\fR as a new token.
.PP
We find no Perl 5 code on \s-1CPAN\s0 using this construction, outside the core's
tests for it, so we believe that this change will have very little impact on
real-world codebases.
.PP
If it is absolutely necessary to have empty attribute lists (for example,
because of a code generator) then avoid the error by adding a space before
the \f(CW\*(C`=\*(C'\fR.
.SS "Run-time code block in regular expressions"
.IX Subsection "Run-time code block in regular expressions"
Code blocks in regular expressions (\f(CW\*(C`(?{...})\*(C'\fR and \f(CW\*(C`(??{...})\*(C'\fR) used not
to inherit any pragmata (strict, warnings, etc.) if the regular expression
was compiled at run time as happens in cases like these two:
.PP
.Vb 3
\&  use re \*(Aqeval\*(Aq;
\&  $foo =~ $bar; # when $bar contains (?{...})
\&  $foo =~ /$bar(?{ $finished = 1 })/;
.Ve
.PP
This was a bug, which has now been fixed. But it has the potential to break
any code that was relying on this bug.
.SH "Deprecations"
.IX Header "Deprecations"
.ie n .SS """?PATTERN?"" is deprecated"
.el .SS "\f(CW?PATTERN?\fP is deprecated"
.IX Subsection "?PATTERN? is deprecated"
\&\f(CW\*(C`?PATTERN?\*(C'\fR (without the initial m) has been deprecated and now produces
a warning.  This is to allow future use of \f(CW\*(C`?\*(C'\fR in new operators.
The match-once functionality is still available in the form of \f(CW\*(C`m?PATTERN?\*(C'\fR.
.ie n .SS """sv_compile_2op()"" is now deprecated"
.el .SS "\f(CWsv_compile_2op()\fP is now deprecated"
.IX Subsection "sv_compile_2op() is now deprecated"
The \f(CW\*(C`sv_compile_2op()\*(C'\fR \s-1API\s0 function is now deprecated. Searches suggest
that nothing on \s-1CPAN\s0 is using it, so this should have zero impact.
.PP
It attempted to provide an \s-1API\s0 to compile code down to an optree, but failed
to bind correctly to lexicals in the enclosing scope. It's not possible to
fix this problem within the constraints of its parameters and return value.
.SS "Tie functions on scalars holding typeglobs"
.IX Subsection "Tie functions on scalars holding typeglobs"
Calling a tie function (\f(CW\*(C`tie\*(C'\fR, \f(CW\*(C`tied\*(C'\fR, \f(CW\*(C`untie\*(C'\fR) with a scalar argument
acts on a file handle if the scalar happens to hold a typeglob.
.PP
This is a long-standing bug that will be removed in Perl 5.16, as
there is currently no way to tie the scalar itself when it holds
a typeglob, and no way to untie a scalar that has had a typeglob
assigned to it.
.PP
This bug was fixed in 5.13.7 but, because of the breakage it caused, the
fix has been reverted. Now there is a deprecation warning whenever a tie
function is used on a handle without an explicit \f(CW\*(C`*\*(C'\fR.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "\(bu" 4
\&\f(CW\*(C`Archive::Tar\*(C'\fR has been upgraded from version 1.72 to 1.74.
.Sp
Skip extracting pax extended headers.
.IP "\(bu" 4
\&\f(CW\*(C`autodie\*(C'\fR has been upgraded from version 2.10 to 2.1001.
.Sp
Test fix in blead for \s-1VMS\s0.
.IP "\(bu" 4
\&\f(CW\*(C`B\*(C'\fR has been upgraded from version 1.26 to 1.27.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`B::Concise\*(C'\fR has been upgraded from version 0.81 to 0.82.
.Sp
It no longer produces mangled output with the \f(CW\*(C`\-tree\*(C'\fR option
[perl #80632] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=80632>.
.IP "\(bu" 4
\&\f(CW\*(C`B::Deparse\*(C'\fR has been upgraded from version 1.01 to 1.02.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Cwd\*(C'\fR has been upgraded from version 3.34 to 3.35.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`Data::Dumper\*(C'\fR has been upgraded from version 2.130_01 to 2.130_02.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`Devel::Peek\*(C'\fR has been upgraded from version 1.05 to 1.06.
.Sp
Avoid compiler warnings.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Devel::SelfStubber\*(C'\fR has been upgraded from version 1.03 to 1.05.
.Sp
Whitespace changes.
.IP "\(bu" 4
\&\f(CW\*(C`Digest::SHA\*(C'\fR has been upgraded from 5.48 to 5.50.
.Sp
\&\f(CW\*(C`shasum\*(C'\fR now more closely mimics \f(CW\*(C`sha1sum\*(C'\fR/\f(CW\*(C`md5sum\*(C'\fR.
.Sp
\&\f(CW\*(C`Addfile\*(C'\fR accepts all \s-1POSIX\s0 filenames.
.IP "\(bu" 4
\&\f(CW\*(C`Dumpvalue\*(C'\fR has been upgraded from version 1.14 to 1.15.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`DynaLoader\*(C'\fR has been upgraded from version 1.11 to 1.12.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.IP "\(bu" 4
\&\f(CW\*(C`Env\*(C'\fR has been upgraded from version 1.01 to 1.02.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`ExtUtils::CBuilder\*(C'\fR has been upgraded from 0.2703 to 0.280201.
.Sp
Handle C and \*(C+ compilers separately.
.Sp
Preserves exit status on \s-1VMS\s0.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`ExtUtils::Constant::Utils\*(C'\fR has been upgraded from 0.02 to 0.03.
.Sp
Refactoring and fixing of backcompat code, preparing for resynchronisation
with \s-1CPAN\s0.
.IP "\(bu" 4
\&\f(CW\*(C`ExtUtils::Embed\*(C'\fR has been upgraded from 1.29 to 1.30.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.IP "\(bu" 4
\&\f(CW\*(C`ExtUtils::ParseXS\*(C'\fR has been upgraded from 2.2207 to 2.2208.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`Fcntl\*(C'\fR has been upgraded from 1.10 to 1.11.
.Sp
Avoid compiler warnings.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`feature\*(C'\fR has been upgraded from 1.18 to 1.19.
.Sp
Documentation and test updates for the \f(CW\*(C`unicode_strings\*(C'\fR feature.
See "Full functionality for \f(CW\*(C`use feature \*(Aqunicode_strings\*(Aq\*(C'\fR".
.IP "\(bu" 4
\&\f(CW\*(C`File::CheckTree\*(C'\fR has been upgraded from 4.4 to 4.41.
.Sp
Whitespace changes.
.IP "\(bu" 4
\&\f(CW\*(C`File::Glob\*(C'\fR has been upgraded from 1.10 to 1.11.
.Sp
Avoid compiler warnings.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`GDBM_File\*(C'\fR has been upgraded from 1.12 to 1.13.
.Sp
Test improvements.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.IP "\(bu" 4
\&\f(CW\*(C`Hash::Util::FieldHash\*(C'\fR has been upgraded from 1.06 to 1.07.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`I18N::Collate\*(C'\fR has been upgraded from 1.01 to 1.02.
.Sp
Whitespace changes.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`if\*(C'\fR has been upgraded from 0.06 to 0.0601.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`IO\*(C'\fR has been upgraded from 1.25_02 to 1.25_03.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`IPC::Cmd\*(C'\fR has been upgraded from 0.64 to 0.66.
.Sp
Resolves an issue with splitting Win32 command lines.
.Sp
Documentation enhancements.
.IP "\(bu" 4
\&\f(CW\*(C`IPC::Open3\*(C'\fR has been upgraded from 1.07 to 1.08.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Locale::Codes\*(C'\fR has been upgraded from version 3.14 to 3.15.
.Sp
Adds some codes.
.IP "\(bu" 4
\&\f(CW\*(C`Math::BigInt\*(C'\fR has been upgraded from 1.99_01 to 1.99_02.
.Sp
Documentation and comment spelling fixes.
.IP "\(bu" 4
\&\f(CW\*(C`Memoize\*(C'\fR has been upgraded from version 1.01_03 to 1.02.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Whitespace changes.
.IP "\(bu" 4
\&\f(CW\*(C`MIME::Base64\*(C'\fR has been upgraded from 3.10 to 3.13.
.Sp
Now provides \f(CW\*(C`encode_base64url\*(C'\fR and \f(CW\*(C`decode_base64url\*(C'\fR functions to process
the base64 scheme for \*(L"\s-1URL\s0 applications\*(R".
.IP "\(bu" 4
\&\f(CW\*(C`mro\*(C'\fR has been upgraded from version 1.05 to 1.06.
.Sp
\&\f(CW\*(C`next::method\*(C'\fR \fIet al.\fR now take into account that every class inherits
from \s-1UNIVERSAL\s0
[perl #68654] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=68654>.
.IP "\(bu" 4
\&\f(CW\*(C`NDBM_File\*(C'\fR has been upgraded from 1.10 to 1.11.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Net::Ping\*(C'\fR has been upgraded from 2.36 to 2.37.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.IP "\(bu" 4
\&\f(CW\*(C`ODBM_File\*(C'\fR has been upgraded from 1.09 to 1.10.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Opcode\*(C'\fR has been upgraded from 1.17 to 1.18.
.Sp
Avoid compiler warnings.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`overload\*(C'\fR has been upgraded from 1.11 to 1.12.
.Sp
Avoid a taint problem in use of sprintf.
.Sp
Test asymmetric fallback cases
[perl #71286] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=71286>.
.IP "\(bu" 4
\&\f(CW\*(C`PerlIO::encoding\*(C'\fR has been upgraded from 0.13 to 0.14.
.Sp
Avoid compiler warnings.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`PerlIO::scalar\*(C'\fR has been upgraded from 0.10 to 0.11.
.Sp
A \f(CW\*(C`read\*(C'\fR after a \f(CW\*(C`seek\*(C'\fR beyond the end of the string no longer thinks it
has data to read
[perl #78716] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=78716>.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`PerlIO::via\*(C'\fR has been upgraded from 0.10 to 0.11.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`POSIX\*(C'\fR has been upgraded from 1.22 to 1.23.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`re\*(C'\fR has been upgraded from 0.14 to 0.15.
.Sp
Enforce that \f(CW\*(C`/d\*(C'\fR, \f(CW\*(C`/u\*(C'\fR, and \f(CW\*(C`/l\*(C'\fR are mutually exclusive.
.IP "\(bu" 4
\&\f(CW\*(C`SDBM_File\*(C'\fR has been upgraded from 1.08 to 1.09.
.Sp
Avoid compiler warnings.
.Sp
Remove obsolete \s-1RCS\s0 keywords.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Socket\*(C'\fR has been upgraded from 1.91 to 1.92.
.Sp
It has several new functions for handling IPv6 addresses.
.IP "\(bu" 4
\&\f(CW\*(C`Storable\*(C'\fR has been upgraded from 2.24 to 2.25.
.Sp
This adds support for serialising code references that contain \s-1UTF\-8\s0 strings
correctly. The Storable minor version number changed as a result, meaning that
Storable users who set \f(CW$Storable::accept_future_minor\fR to a \f(CW\*(C`FALSE\*(C'\fR value
will see errors (see \*(L"\s-1FORWARD\s0 \s-1COMPATIBILITY\s0\*(R" in Storable for more details).
.Sp
Freezing no longer gets confused if the Perl stack gets reallocated
during freezing
[perl #80074] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=80074>.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`threads\*(C'\fR has been upgraded from 1.81_02 to 1.81_03.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`threads::shared\*(C'\fR has been upgraded from 1.34 to 1.35.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`Time::HiRes\*(C'\fR has been upgraded from 1.9721 to 1.9721_01.
.Sp
Build fix in blead for \s-1VMS\s0.
.IP "\(bu" 4
\&\f(CW\*(C`Unicode::Collate\*(C'\fR has been upgraded from 0.67 to 0.6801.
.Sp
Documentation clarification.
.Sp
Test improvements.
.IP "\(bu" 4
\&\f(CW\*(C`Unicode::Normalize\*(C'\fR has been upgraded from 1.07 to 1.08.
.Sp
Avoid compiler warnings.
.IP "\(bu" 4
\&\f(CW\*(C`Unicode::UCD\*(C'\fR has been upgraded from 0.29 to 0.30.
.Sp
Add info about named sequence alternatives.
.Sp
Don't use \f(CW\*(C`CompositionExclusions.txt\*(C'\fR.
.IP "\(bu" 4
\&\f(CW\*(C`version\*(C'\fR has been upgraded from 0.82 to 0.86.
.Sp
Modify export logic for \f(CW\*(C`is_strict\*(C'\fR and \f(CW\*(C`is_lax\*(C'\fR.
.Sp
Various backcompat fixes.
.IP "\(bu" 4
\&\f(CW\*(C`Win32\*(C'\fR has been upgraded from 0.39 to 0.41.
.Sp
Add several functions.
.Sp
Corrections to names returned by \f(CW\*(C`Win32::GetOSName\*(C'\fR and
\&\f(CW\*(C`Win32::GetOSDisplayName\*(C'\fR.
.IP "\(bu" 4
\&\f(CW\*(C`XS::APItest\*(C'\fR has been upgraded from 0.26 to 0.27.
.Sp
Test new \s-1API\s0 functions.
.Sp
Avoid compiler warnings.
.SS "Dual-life Modules and Pragmata"
.IX Subsection "Dual-life Modules and Pragmata"
These modules were formerly distributed only in the Perl core
distribution, and are now dual-lifed (meaning they are now also available
separately on \s-1CPAN\s0):
.IP "\(bu" 4
\&\f(CW\*(C`autouse\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`Devel::SelfStubber\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`Dumpvalue\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`Env\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`File::CheckTree\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`I18N::Collate\*(C'\fR
.SH "Diagnostics"
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see perldiag.
.SS "New Diagnostics"
.IX Subsection "New Diagnostics"
.IP "\(bu" 4
There is a new \*(L"Closure prototype called\*(R" error
[perl #68560] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=68560>.
.SS "Changes to Existing Diagnostics"
.IX Subsection "Changes to Existing Diagnostics"
.IP "\(bu" 4
The \*(L"Found = in conditional\*(R" warning that is emitted when a constant is
assigned to a variable in a condition is now withheld if the constant is
actually a subroutine or one generated by \f(CW\*(C`use constant\*(C'\fR, since the value
of the constant may not be known at the time the program is written
[perl #77762] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77762>.
.SH "Configuration and Compilation"
.IX Header "Configuration and Compilation"
.IP "\(bu" 4
The \f(CW\*(C`Encode\*(C'\fR module can now (once again) be included in a static Perl
build.  The special-case handling for this situation got broken in Perl
5.11.0, and has now been repaired.
.SH "Testing"
.IX Header "Testing"
.IP "\(bu" 4
Tests for \f(CW\*(C`Fcntl\*(C'\fR, \f(CW\*(C`File::Glob\*(C'\fR, \f(CW\*(C`GDBM_File\*(C'\fR, \f(CW\*(C`IPC::Open3\*(C'\fR,
\&\f(CW\*(C`NDBM_File\*(C'\fR, \f(CW\*(C`ODBM_File\*(C'\fR, \f(CW\*(C`Opcode\*(C'\fR, \f(CW\*(C`PerlIO::encoding\*(C'\fR, \f(CW\*(C`SDBM_File\*(C'\fR,
and \f(CW\*(C`Storable\*(C'\fR now use the Test::More framework.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "NetBSD" 4
.IX Item "NetBSD"
The NetBSD hints file has been changed to make the system's malloc the
default.
.IP "Windows" 4
.IX Item "Windows"
The option to use an externally-supplied \f(CW\*(C`crypt()\*(C'\fR, or to build with no
\&\f(CW\*(C`crypt()\*(C'\fR at all, has been removed.  Perl supplies its own \f(CW\*(C`crypt()\*(C'\fR
implementation for Windows, and the political situation that required
this part of the distribution to sometimes be omitted is long gone.
.SH "Internal Changes"
.IX Header "Internal Changes"
.IP "\(bu" 4
The \f(CW\*(C`mg_findext()\*(C'\fR and
\&\f(CW\*(C`sv_unmagicext()\*(C'\fR
functions have been added to the \s-1API\s0.
They allow extension authors to find and remove magic attached to
scalars based on both the magic type and the magic virtual table, similar to how
\&\f(CW\*(C`sv_magicext()\*(C'\fR attaches magic of a certain type and with a given virtual table
to a scalar. This eliminates the need for extensions to walk the list of
\&\f(CW\*(C`MAGIC\*(C'\fR pointers of an \f(CW\*(C`SV\*(C'\fR to find the magic that belongs to them.
.IP "\(bu" 4
The
\&\f(CW\*(C`parse_fullexpr()\*(C'\fR,
\&\f(CW\*(C`parse_listexpr()\*(C'\fR,
\&\f(CW\*(C`parse_termexpr()\*(C'\fR, and
\&\f(CW\*(C`parse_arithexpr()\*(C'\fR
functions have been added to the \s-1API\s0.  They perform
recursive-descent parsing of expressions at various precedence levels.
They are expected to be used by syntax plugins.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
\&\f(CW\*(C`BEGIN {require 5.12.0}\*(C'\fR now behaves as documented, rather than behaving
identically to \f(CW\*(C`use 5.12.0;\*(C'\fR. Previously, \f(CW\*(C`require\*(C'\fR in a \f(CW\*(C`BEGIN\*(C'\fR block
was erroneously executing the \f(CW\*(C`use feature \*(Aq:5.12.0\*(Aq\*(C'\fR and
\&\f(CW\*(C`use strict; use warnings;\*(C'\fR behaviour, which only \f(CW\*(C`use\*(C'\fR was documented to
provide
[perl #69050] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=69050>.
.IP "\(bu" 4
\&\f(CW\*(C`use 5.42\*(C'\fR
[perl #69050] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=69050>,
\&\f(CW\*(C`use 6\*(C'\fR and \f(CW\*(C`no 5\*(C'\fR no longer leak memory.
.IP "\(bu" 4
\&\f(CW\*(C`eval "BEGIN{die}"\*(C'\fR no longer leaks memory on non-threaded builds.
.IP "\(bu" 4
PerlIO no longer crashes when called recursively, e.g., from a signal
handler. Now it just leaks memory
[perl #75556] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=75556>.
.IP "\(bu" 4
Defining a constant with the same name as one of perl's special blocks
(e.g., \s-1INIT\s0) stopped working in 5.12.0, but has now been fixed
[perl #78634] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=78634>.
.IP "\(bu" 4
A reference to a literal value used as a hash key (\f(CW$hash{\e"foo"}\fR) used
to be stringified, even if the hash was tied
[perl #79178] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=79178>.
.IP "\(bu" 4
A closure containing an \f(CW\*(C`if\*(C'\fR statement followed by a constant or variable
is no longer treated as a constant
[perl #63540] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=63540>.
.IP "\(bu" 4
Calling a closure prototype (what is passed to an attribute handler for a
closure) now results in a \*(L"Closure prototype called\*(R" error message instead
of a crash
[perl #68560] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=68560>.
.IP "\(bu" 4
A regular expression optimisation would sometimes cause a match with a
\&\f(CW\*(C`{n,m}\*(C'\fR quantifier to fail when it should match
[perl #79152] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=79152>.
.IP "\(bu" 4
What has become known as the \*(L"Unicode Bug\*(R" is mostly resolved in this release.
Under \f(CW\*(C`use feature \*(Aqunicode_strings\*(Aq\*(C'\fR, the internal storage format of a
string no longer affects the external semantics.  There are two known
exceptions.  User-defined case changing functions, which are planned to
be deprecated in 5.14, require utf8\-encoded strings to function; and the
character \f(CW\*(C`LATIN SMALL LETTER SHARP S\*(C'\fR in regular expression
case-insensitive matching has a somewhat different set of bugs depending
on the internal storage format.  Case-insensitive matching of all
characters that have multi-character matches, as this one does, is
problematical in Perl.
[perl #58182] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=58182>.
.IP "\(bu" 4
Mentioning a read-only lexical variable from the enclosing scope in a
string \f(CW\*(C`eval\*(C'\fR no longer causes the variable to become writable
[perl #19135] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=19135>.
.IP "\(bu" 4
\&\f(CW\*(C`state\*(C'\fR can now be used with attributes. It used to mean the same thing as
\&\f(CW\*(C`my\*(C'\fR if attributes were present
[perl #68658] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=68658>.
.IP "\(bu" 4
Expressions like \f(CW\*(C`@$a > 3\*(C'\fR no longer cause \f(CW$a\fR to be mentioned in
the \*(L"Use of uninitialized value in numeric gt\*(R" warning when \f(CW$a\fR is
undefined (since it is not part of the \f(CW\*(C`>\*(C'\fR expression, but the operand
of the \f(CW\*(C`@\*(C'\fR)
[perl #72090] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=72090>.
.IP "\(bu" 4
\&\f(CW\*(C`require\*(C'\fR no longer causes \f(CW\*(C`caller\*(C'\fR to return the wrong file name for
the scope that called \f(CW\*(C`require\*(C'\fR and other scopes higher up that had the
same file name
[perl #68712] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=68712>.
.IP "\(bu" 4
The ref types in the typemap for \s-1XS\s0 bindings now support magical variables
[perl #72684] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=72684>.
.IP "\(bu" 4
Match variables (e.g., \f(CW$1\fR) no longer persist between calls to a sort
subroutine
[perl #76026] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=76026>.
.IP "\(bu" 4
The \f(CW\*(C`B\*(C'\fR module was returning \f(CW\*(C`B::OP\*(C'\fRs instead of \f(CW\*(C`B::LOGOP\*(C'\fRs for \f(CW\*(C`entertry\*(C'\fR
[perl #80622] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=80622>.
This was due to a bug in the perl core, not in \f(CW\*(C`B\*(C'\fR itself.
.IP "\(bu" 4
Some numeric operators were converting integers to floating point,
resulting in loss of precision on 64\-bit platforms
[perl #77456] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=77456>.
.IP "\(bu" 4
The fallback behaviour of overloading on binary operators was asymmetric
[perl #71286] <http://rt.perl.org/rt3/Public/Bug/Display.html?id=71286>.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.13.8 represents approximately one month of development since
Perl 5.13.7 and contains 38715 lines of changes across 546 files from
38 authors and committers.
.PP
Thank you to the following for contributing to this release:
.PP
Abhijit Menon-Sen, Abigail, Andreas Ko\*:nig, Ben Morrow, Brad Gilbert,
brian d foy, Chip Salzenberg, Chris 'BinGOs' Williams, Craig A. Berry,
David Golden, David Leadbeater, David Mitchell, Father Chrysostomos,
Florian Ragwitz, Goro Fuji, H.Merijn Brand, Jan Dubois, Jerry D. Hedden,
Jesse Vincent, John Peacock, Karl Williamson, Lukas Mai, Marvin Humphrey,
Max Maischein, Michael Breen, Michael Fig, Nicholas Clark, Nick Cleaton,
Paul Evans, Peter J. Holzer, Peter John Acklam, Rafael Garcia-Suarez,
Reini Urban, Renee Baecker, Ricardo Signes, Tony Cook, Yves Orton, Zefram
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the perlbug
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of \f(CW\*(C`perl \-V\*(C'\fR, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5\-security\-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on \s-1CPAN\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details
on what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
