.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Locale::Codes::Changes 3"
.TH Locale::Codes::Changes 3 "2011-09-26" "perl v5.14.2" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Locale::Codes::Changes \- details important changes after 2.07
.SH "3.10"
.IX Header "3.10"
.IP "\fBChanged XXX_code2code behavior slightly\fR" 4
.IX Item "Changed XXX_code2code behavior slightly"
In previous versions, passing in the same code set for both code set
arguments would automatically return undef. For example:
.Sp
.Vb 2
\&   country_code2code(\*(Aqbo\*(Aq,LOCALE_CODE_ALPHA_2,LOCALE_CODE_ALPHA_2);
\&      => undef
.Ve
.Sp
This doesn't seem like reasonable behavior, so it has been changed
to allow the same code set:
.Sp
.Vb 2
\&   country_code2code(\*(Aqbo\*(Aq,LOCALE_CODE_ALPHA_2,LOCALE_CODE_ALPHA_2);
\&      => \*(Aqbo\*(Aq
.Ve
.Sp
Note that if an invalid code is passed in, undef will still be
returned:
.Sp
.Vb 2
\&   country_code2code(\*(Aqbol\*(Aq,LOCALE_CODE_ALPHA_2,LOCALE_CODE_ALPHA_2);
\&      => undef
.Ve
.IP "\fBAdded many semi-private routines\fR" 4
.IX Item "Added many semi-private routines"
Previous versions had only two semi-private routines: rename_country
and alias_code which had the ability to modify the internal data in
a couple very limited ways. It was requested (in an anonymous posting
by someone named Steve and also by Steve Hay) that better support
for modifying internal data, so a full set of routines were added.
.Sp
The full set of routines includes:
.Sp
.Vb 4
\&   rename_country
\&   rename_language
\&   rename_currency
\&   rename_script
\&
\&   add_country
\&   add_language
\&   add_currency
\&   add_script
\&
\&   delete_country
\&   delete_language
\&   delete_currency
\&   delete_script
\&
\&   add_country_alias
\&   add_language_alias
\&   add_currency_alias
\&   add_script_alias
\&
\&   delete_country_alias
\&   delete_language_alias
\&   delete_currency_alias
\&   delete_script_alias
\&
\&   rename_country_code
\&   rename_language_code
\&   rename_currency_code
\&   rename_script_code
\&
\&   add_country_code_alias
\&   add_language_code_alias
\&   add_currency_code_alias
\&   add_script_code_alias
\&
\&   delete_country_code_alias
\&   delete_language_code_alias
\&   delete_currency_code_alias
\&   delete_script_code_alias
.Ve
.SH "3.00"
.IX Header "3.00"
.IP "\fBNew maintainer\fR" 4
.IX Item "New maintainer"
From 1997 to 2004, Locale::Codes was maintained by Neil
Bowers. Unfortunately, no updates were made from June 2004 to January
2010. During that time, a number of changes have been made to the
standards since then, so the data included was out-of-date.
.Sp
I contacted Neil to get his permission to assume maintenance of
the module, and he kindly agreed.
.IP "\fBAll codes are generated from standards\fR" 4
.IX Item "All codes are generated from standards"
All of the values returned by the various functions are now values
directly from the standards. This means that the values returned in
the 2.xx series are not necessarily the same as the values returned
here.
.Sp
As an example, the \s-1ISO\s0 3166 standard which lists country codes refers
to the country associated with the code \*(L"bo\*(R" as \*(L"Bolivia,
Plurinational State of\*(R", so that is what is returned. In the 2.xx
series, \*(L"Bolivia\*(R" was returned.  Also, the country names vary from one
standard to another. So the code \*(L"bol\*(R" which is maintained by the
United Nations returns the name of the country as \*(L"Bolivia
(Plurinational State of)\*(R". Some common aliases have been added, so you
can still request a code associated with a county name \*(L"Bolivia\*(R".
.Sp
Since the data comes from the standards, some \*(L"incorrect\*(R" values are
no longer supported. For example, 2.07 treated \*(L"Zaire\*(R" as an alias for
\&\*(L"Congo\*(R", but the country changed it's name, and \*(L"Zaire\*(R" is not in the
standard, so it has been dropped in 3.00.
.IP "\fBAdded several code sets from standards\fR" 4
.IX Item "Added several code sets from standards"
I've added the following code sets:
.Sp
.Vb 3
\&   FIPS 10 country codes
\&   Alpha\-3 and Term language codes
\&   Numeric currency codes
.Ve
.IP "\fBLocale::Script changed\fR" 4
.IX Item "Locale::Script changed"
In 2.xx, Locale::Script assigned scripts to country codes, which is \s-1NOT\s0
how it is done currently in the standards. It appears that an older version
of \s-1ISO\s0 15924 did this, but I haven't found an old version to confirm
that, and in any case, that is not the case in the current standards.
.Sp
As a result, the Locale::Script module is completely incompatible with
the 2.xx version with respect to the types of codes it supports. None of
the old codes will work.
.IP "\fBAdded missing functions\fR" 4
.IX Item "Added missing functions"
I've added in some functions which were \*(L"missing\*(R" previously (since there was
only one set of codes supported, the code2code functions didn't apply):
.Sp
.Vb 2
\&   language_code2code
\&   currency_code2code
.Ve
.Sp
so the interfaces for each type of codes are consistent.
.IP "\fBDropped support for _alias_code\fR" 4
.IX Item "Dropped support for _alias_code"
In Locale::Country, _alias_code was an allowed, but deprecated function
which was documented to be supported in the 2.xx series. I've removed it.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Locale::Codes
.SH "AUTHOR"
.IX Header "AUTHOR"
See Locale::Codes for full author history.
.PP
Currently maintained by Sullivan Beck (sbeck@cpan.org).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\&   Copyright (c) 2010\-2011 Sullivan Beck
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
